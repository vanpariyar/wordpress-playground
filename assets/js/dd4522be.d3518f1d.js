"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[6295],{6596:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(11),a=(n(2735),n(9530));const o={sidebar_position:1,title:"Coding standards"},i="Coding standards",s={unversionedId:"contributing/coding-standards",id:"contributing/coding-standards",title:"Coding standards",description:"Formatting",source:"@site/docs/13-contributing/03-coding-standards.md",sourceDirName:"13-contributing",slug:"/contributing/coding-standards",permalink:"/wordpress-playground/docs/contributing/coding-standards",draft:!1,editUrl:"https://github.com/WordPress/wordpress-playground/tree/trunk/packages/docs/site/docs/13-contributing/03-coding-standards.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Coding standards"},sidebar:"tutorialSidebar",previous:{title:"Code Contributions",permalink:"/wordpress-playground/docs/contributing/code"},next:{title:"NX \u2013 Packages and Projects",permalink:"/wordpress-playground/docs/contributing/packages-and-projects"}},l={},u=[{value:"Formatting",id:"formatting",level:2},{value:"Public API",id:"public-api",level:2},{value:"Blueprints",id:"blueprints",level:2},{value:"Batteries",id:"batteries",level:3},{value:"Composability",id:"composability",level:3},{value:"Ease of use",id:"ease-of-use",level:3}],d={toc:u},p="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"coding-standards"},"Coding standards"),(0,a.kt)("h2",{id:"formatting"},"Formatting"),(0,a.kt)("p",null,"Formatting is handled automatically by the relevant tools and verified by CI. Relax, sit back, and let the machines do the work."),(0,a.kt)("h2",{id:"public-api"},"Public API"),(0,a.kt)("p",null,"Playground aims to keep the lowest possible API area."),(0,a.kt)("p",null,"Public APIs are easy to add and hard to remove. It only takes one PR to add a new API, but it may take a thousand to remove it \u2013 especially if was already consumed in other projects."),(0,a.kt)("p",null,"Don't expose anything that is not needed. If you don't need to expose a function, don't. If you don't need to expose a class, don't. If you don't need to expose a constant, don't."),(0,a.kt)("h2",{id:"blueprints"},"Blueprints"),(0,a.kt)("p",null,"Blueprints are the main way to interact with the WordPress Playground. They are JSON files that describe a set of steps to perform. The Playground will execute these steps in order."),(0,a.kt)("h3",{id:"batteries"},"Batteries"),(0,a.kt)("p",null,"Blueprint steps are meant to be small and focused \u2013 like Unix tools. They should do one thing and do it well."),(0,a.kt)("p",null,"When it comes to building new steps:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"It is best not to build it at all"),(0,a.kt)("li",{parentName:"ul"},"If you must build it, try refactoring an existing step first"),(0,a.kt)("li",{parentName:"ul"},"If you cannot do that, make sure the new step opens up an entirely new feature that doesn't do anything that can be achieved with existing steps")),(0,a.kt)("h3",{id:"composability"},"Composability"),(0,a.kt)("p",null,"Blueprint Steps are meant to be composable. This means that you can run them many times over and still get sensible results."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Assume your step won't be run more than once."),(0,a.kt)("li",{parentName:"ul"},"Assume your step will be run in a specific order."),(0,a.kt)("li",{parentName:"ul"},"Modify PHP files to define constants.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add unit tests that run your step multiple times."),(0,a.kt)("li",{parentName:"ul"},"Store constants in virtual JSON files.")),(0,a.kt)("h3",{id:"ease-of-use"},"Ease of use"),(0,a.kt)("p",null,"Blueprints are meant to be easy to use and require the minimal amount of effort on the consumer side."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Require arguments that can be made optional."),(0,a.kt)("li",{parentName:"ul"},"Require complex arguments when simple ones will do. For example, don't require a plugin path when plugin slug will do.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Provide a TypeScript type for the Blueprint. JSON Schema is generated from it."),(0,a.kt)("li",{parentName:"ul"},"Provide a function to handle a blueprint step. Accept argument of the type you defined in the previous step."),(0,a.kt)("li",{parentName:"ul"},"Provide usage example in the doc string. It is automatically reflected in the docs.")))}c.isMDXComponent=!0},9530:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(2735);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||c[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);