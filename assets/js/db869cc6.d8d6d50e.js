"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[570],{1223:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var n=r(11),o=(r(2735),r(9530));const s={},a="Cross-process communication",c={unversionedId:"architecture/browser-cross-process-communication",id:"architecture/browser-cross-process-communication",title:"Cross-process communication",description:"@php-wasm/web uses the Comlink library to turns the one-way postMessage available in JavaScript into a two-way communication channel.",source:"@site/docs/11-architecture/14-browser-cross-process-communication.md",sourceDirName:"11-architecture",slug:"/architecture/browser-cross-process-communication",permalink:"/wordpress-playground/docs/architecture/browser-cross-process-communication",draft:!1,editUrl:"https://github.com/WordPress/wordpress-playground/tree/trunk/packages/docs/site/docs/11-architecture/14-browser-cross-process-communication.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Scopes",permalink:"/wordpress-playground/docs/architecture/browser-scopes"},next:{title:"WordPress support",permalink:"/wordpress-playground/docs/architecture/wordpress"}},i={},p=[],u={toc:p},l="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(l,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cross-process-communication"},"Cross-process communication"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@php-wasm/web")," uses the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/GoogleChromeLabs/comlink"},"Comlink")," library to turns the one-way ",(0,o.kt)("inlineCode",{parentName:"p"},"postMessage")," available in JavaScript into a two-way communication channel."),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"postMessage")," sounds unfamiliar, it's what JavaScript threads use to communicate. Please review the ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage"},"MDN Docs")," before continuing."),(0,o.kt)("p",null,"By default, ",(0,o.kt)("inlineCode",{parentName:"p"},"postMessage")," does not offer any request/response mechanics. You may send messages to another thread and you may independently receive messages from it, but you can't send a message and await a response to that specific message."),(0,o.kt)("p",null,"To quote the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/GoogleChromeLabs/comlink"},"Comlink")," library documentation:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"main.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import * as Comlink from 'https://unpkg.com/comlink/dist/esm/comlink.mjs';\nasync function init() {\n    const worker = new Worker('worker.js');\n    // WebWorkers use `postMessage` and therefore work with Comlink.\n    const obj = Comlink.wrap(worker);\n    alert(`Counter: ${await obj.counter}`);\n    await obj.inc();\n    alert(`Counter: ${await obj.counter}`);\n}\ninit();\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"worker.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"importScripts('https://unpkg.com/comlink/dist/umd/comlink.js');\n\nconst obj = {\n    counter: 0,\n    inc() {\n        this.counter++;\n    },\n};\n\nComlink.expose(obj);\n")),(0,o.kt)("p",null,"In our case, the exposed object is the ",(0,o.kt)("a",{parentName:"p",href:"/api/web/class/WebPHPEndpoint"},"WebPHPEndpoint")," instance."))}m.isMDXComponent=!0},9530:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(2735);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},l="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),l=p(r),d=o,b=l["".concat(i,".").concat(d)]||l[d]||m[d]||s;return r?n.createElement(b,a(a({ref:t},u),{},{components:r})):n.createElement(b,a({ref:t},u))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[l]="string"==typeof e?e:o,a[1]=c;for(var p=2;p<s;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);