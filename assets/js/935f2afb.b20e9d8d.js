"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Start here","href":"/wordpress-playground/docs/start-here","docId":"start-here/index"},{"type":"link","label":"Start using WordPress Playground in 5 minutes","href":"/wordpress-playground/docs/start-using","docId":"start-using/index"},{"type":"link","label":"Build your first app","href":"/wordpress-playground/docs/build-your-first-app","docId":"build-an-app/index"},{"type":"link","label":"Usage in Node.js","href":"/wordpress-playground/docs/usage-in-node-js","docId":"nodejs/index"},{"type":"category","label":"Playground APIs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"APIs overview","href":"/wordpress-playground/docs/apis-overview","docId":"playground-apis/index"},{"type":"link","label":"Concepts","href":"/wordpress-playground/docs/playground-apis/api-concepts","docId":"playground-apis/api-concepts"}]},{"type":"link","label":"Query API","href":"/wordpress-playground/docs/query-api","docId":"query-api/index"},{"type":"category","label":"Blueprints API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting started with Blueprints","href":"/wordpress-playground/docs/blueprints-api/index","docId":"blueprints-api/index"},{"type":"link","label":"Blueprint data Format","href":"/wordpress-playground/docs/blueprints-api/data-format","docId":"blueprints-api/data-format"},{"type":"link","label":"Using Blueprints","href":"/wordpress-playground/docs/blueprints-api/using-blueprints","docId":"blueprints-api/using-blueprints"},{"type":"link","label":"Resources","href":"/wordpress-playground/docs/blueprints-api/resources","docId":"blueprints-api/resources"},{"type":"link","label":"Steps","href":"/wordpress-playground/docs/blueprints-api/steps","docId":"blueprints-api/steps"},{"type":"link","label":"Isomorphism","href":"/wordpress-playground/docs/blueprints-api/isomorphic","docId":"blueprints-api/isomorphic"},{"type":"link","label":"API Consistency","href":"/wordpress-playground/docs/blueprints-api/json-api-and-function-api","docId":"blueprints-api/json-api-and-function-api"},{"type":"link","label":"Examples","href":"/wordpress-playground/docs/blueprints-api/examples","docId":"blueprints-api/examples"}]},{"type":"category","label":"JavaScript API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"JavaScript API","href":"/wordpress-playground/docs/javascript-api/index","docId":"javascript-api/index"},{"type":"link","label":"Playground API Client","href":"/wordpress-playground/docs/javascript-api/playground-api-client","docId":"javascript-api/playground-api-client"},{"type":"link","label":"remote.html vs index.html","href":"/wordpress-playground/docs/javascript-api/index-html-vs-remote-html","docId":"javascript-api/index-html-vs-remote-html"},{"type":"link","label":"Blueprints JSON and the API Client","href":"/wordpress-playground/docs/javascript-api/blueprint-json-in-api-client","docId":"javascript-api/blueprint-json-in-api-client"},{"type":"link","label":"Blueprints Functions and the API Client","href":"/wordpress-playground/docs/javascript-api/blueprint-functions-in-api-client","docId":"javascript-api/blueprint-functions-in-api-client"}]},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Architecture Overview","href":"/wordpress-playground/docs/architecture/index","docId":"architecture/index"},{"type":"link","label":"WebAssembly PHP","href":"/wordpress-playground/docs/architecture/wasm-php-overview","docId":"architecture/wasm-php-overview"},{"type":"link","label":"Compiling PHP","href":"/wordpress-playground/docs/architecture/wasm-php-compiling","docId":"architecture/wasm-php-compiling"},{"type":"link","label":"PHP.js JavaScript module","href":"/wordpress-playground/docs/architecture/wasm-php-javascript-module","docId":"architecture/wasm-php-javascript-module"},{"type":"link","label":"PHP Filesystem","href":"/wordpress-playground/docs/architecture/wasm-php-filesystem","docId":"architecture/wasm-php-filesystem"},{"type":"link","label":"Data dependencies (browser version)","href":"/wordpress-playground/docs/architecture/wasm-php-data-dependencies","docId":"architecture/wasm-php-data-dependencies"},{"type":"link","label":"Asyncify","href":"/wordpress-playground/docs/architecture/wasm-asyncify","docId":"architecture/wasm-asyncify"},{"type":"link","label":"Running PHP apps in the browser with ServiceWorkers and Worker Threads","href":"/wordpress-playground/docs/architecture/browser-concepts","docId":"architecture/browser-concepts"},{"type":"link","label":"Browser tab orchestrates the execution","href":"/wordpress-playground/docs/architecture/browser-tab-orchestrates-execution","docId":"architecture/browser-tab-orchestrates-execution"},{"type":"link","label":"Iframe-based rendering","href":"/wordpress-playground/docs/architecture/browser-iframe-rendering","docId":"architecture/browser-iframe-rendering"},{"type":"link","label":"PHP Worker Threads","href":"/wordpress-playground/docs/architecture/browser-php-worker-threads","docId":"architecture/browser-php-worker-threads"},{"type":"link","label":"Service Workers","href":"/wordpress-playground/docs/architecture/browser-service-workers","docId":"architecture/browser-service-workers"},{"type":"link","label":"Scopes","href":"/wordpress-playground/docs/architecture/browser-scopes","docId":"architecture/browser-scopes"},{"type":"link","label":"Cross-process communication","href":"/wordpress-playground/docs/architecture/browser-cross-process-communication","docId":"architecture/browser-cross-process-communication"},{"type":"link","label":"WordPress support","href":"/wordpress-playground/docs/architecture/wordpress","docId":"architecture/wordpress"},{"type":"link","label":"How does it work?","href":"/wordpress-playground/docs/architecture/wordpress-database","docId":"architecture/wordpress-database"},{"type":"link","label":"Bundling WordPress for the browser","href":"/wordpress-playground/docs/architecture/browser-wordpress","docId":"architecture/browser-wordpress"}]},{"type":"link","label":"Limitations","href":"/wordpress-playground/docs/limitations","docId":"limitations/index"},{"type":"category","label":"Contributing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Start Contributing","href":"/wordpress-playground/docs/contributing/index","docId":"contributing/index"},{"type":"link","label":"Code Contributions","href":"/wordpress-playground/docs/contributing/code","docId":"contributing/code"},{"type":"link","label":"Coding standards","href":"/wordpress-playground/docs/contributing/coding-standards","docId":"contributing/coding-standards"},{"type":"link","label":"NX \u2013 Packages and Projects","href":"/wordpress-playground/docs/contributing/packages-and-projects","docId":"contributing/packages-and-projects"},{"type":"link","label":"Publishing Packages, Releases, and More","href":"/wordpress-playground/docs/contributing/publishing","docId":"contributing/publishing"},{"type":"link","label":"Contributing Documentation","href":"/wordpress-playground/docs/contributing/documentation","docId":"contributing/documentation"}]}]},"docs":{"architecture/browser-concepts":{"id":"architecture/browser-concepts","title":"Running PHP apps in the browser with ServiceWorkers and Worker Threads","description":"On a high level, WordPress Playground works in web browsers as follows:","sidebar":"tutorialSidebar"},"architecture/browser-cross-process-communication":{"id":"architecture/browser-cross-process-communication","title":"Cross-process communication","description":"@php-wasm/web uses the Comlink library to turns the one-way postMessage available in JavaScript into a two-way communication channel.","sidebar":"tutorialSidebar"},"architecture/browser-iframe-rendering":{"id":"architecture/browser-iframe-rendering","title":"Iframe-based rendering","description":"All the PHPRequestHandler responses must be rendered in an iframe to avoid reloading the page. Remember, the entire setup only lives as long as the main index.html. We want to avoid reloading the main app at all cost.","sidebar":"tutorialSidebar"},"architecture/browser-php-worker-threads":{"id":"architecture/browser-php-worker-threads","title":"PHP Worker Threads","description":"PHP is always ran in a separate thread we\'ll call a \\"Worker Thread.\\" This happens to ensure the PHP runtime doesn\'t slow down the website.","sidebar":"tutorialSidebar"},"architecture/browser-scopes":{"id":"architecture/browser-scopes","title":"Scopes","description":"Scopes keep your app working when you open it in two different different browser tabs.","sidebar":"tutorialSidebar"},"architecture/browser-service-workers":{"id":"architecture/browser-service-workers","title":"Service Workers","description":"A Service Worker is used to handle the HTTP traffic using the in-browser PHPRequestHandler.","sidebar":"tutorialSidebar"},"architecture/browser-tab-orchestrates-execution":{"id":"architecture/browser-tab-orchestrates-execution","title":"Browser tab orchestrates the execution","description":"The main index.html ties the entire application together. It starts all the concurrent processes and displays the PHP responses. The app only lives as long as the main index.html.","sidebar":"tutorialSidebar"},"architecture/browser-wordpress":{"id":"architecture/browser-wordpress","title":"Bundling WordPress for the browser","description":"The web bundler Dockerfile turns a vanilla WordPress into a browser-optimized one:","sidebar":"tutorialSidebar"},"architecture/index":{"id":"architecture/index","title":"Architecture Overview","description":"WordPress Playground consists of the following high-level components:","sidebar":"tutorialSidebar"},"architecture/wasm-asyncify":{"id":"architecture/wasm-asyncify","title":"Asyncify","description":"Asyncify lets synchronous C or C++ code interact with asynchronous JavaScript. Technically, it saves the entire C call stack before yielding control back to JavaScript, and then restores it when the asynchronous call is finished. This is called stack switching.","sidebar":"tutorialSidebar"},"architecture/wasm-php-compiling":{"id":"architecture/wasm-php-compiling","title":"Compiling PHP","description":"The build pipeline lives in a Dockerfile. It was originally forked from seanmorris/php-wasm","sidebar":"tutorialSidebar"},"architecture/wasm-php-data-dependencies":{"id":"architecture/wasm-php-data-dependencies","title":"Data dependencies (browser version)","description":"Importing file to PHP by manually calling writeFile() would be quite inconvenient. Fortunately, Emscripten provides a \\"data dependencies\\" feature.","sidebar":"tutorialSidebar"},"architecture/wasm-php-filesystem":{"id":"architecture/wasm-php-filesystem","title":"PHP Filesystem","description":"The PHP module has its own filesystem separate from your computer\'s filesystem. It is provided by Emscripten\'s FS library and the default APIs is low-level and cumbersome to use. The PHP JavaScript class shipped with WordPress Playground wraps it with a more convenient higher-level API.","sidebar":"tutorialSidebar"},"architecture/wasm-php-javascript-module":{"id":"architecture/wasm-php-javascript-module","title":"PHP.js JavaScript module","description":"PHP.js JavaScript module","sidebar":"tutorialSidebar"},"architecture/wasm-php-overview":{"id":"architecture/wasm-php-overview","title":"WebAssembly PHP","description":"WordPress Playground build the PHP interpreter to WebAssembly using Emscripten and a dedicated pipeline.","sidebar":"tutorialSidebar"},"architecture/wordpress":{"id":"architecture/wordpress","title":"WordPress support","description":"WordPress, as a PHP application, can run on PHP WebAssembly. However, there are a few caveats.","sidebar":"tutorialSidebar"},"architecture/wordpress-database":{"id":"architecture/wordpress-database","title":"How does it work?","description":"Database is supported via MySQLSQLite translation layer","sidebar":"tutorialSidebar"},"blueprints-api/data-format":{"id":"blueprints-api/data-format","title":"Blueprint data Format","description":"A Blueprint can contain the following properties:","sidebar":"tutorialSidebar"},"blueprints-api/examples":{"id":"blueprints-api/examples","title":"Examples","description":"Let\'s see some cool things you can do with Blueprints.","sidebar":"tutorialSidebar"},"blueprints-api/index":{"id":"blueprints-api/index","title":"Getting started with Blueprints","description":"Blueprints are JSON files for setting up your very own WordPress Playground instance. For example:","sidebar":"tutorialSidebar"},"blueprints-api/isomorphic":{"id":"blueprints-api/isomorphic","title":"Isomorphism","description":"https://github.com/WordPress/wordpress-playground/pull/214","sidebar":"tutorialSidebar"},"blueprints-api/json-api-and-function-api":{"id":"blueprints-api/json-api-and-function-api","title":"API Consistency","description":"https://github.com/WordPress/wordpress-playground/pull/215","sidebar":"tutorialSidebar"},"blueprints-api/resources":{"id":"blueprints-api/resources","title":"Resources","description":"Resource References allow you use external files in Blueprints","sidebar":"tutorialSidebar"},"blueprints-api/steps":{"id":"blueprints-api/steps","title":"Steps","description":"The steps property of a Blueprint is an array of steps to run. For example this Blueprint logs the user in as an admin:","sidebar":"tutorialSidebar"},"blueprints-api/using-blueprints":{"id":"blueprints-api/using-blueprints","title":"Using Blueprints","description":"You can use Blueprints in one of two ways:","sidebar":"tutorialSidebar"},"build-an-app/index":{"id":"build-an-app/index","title":"Build your first app","description":"WordPress Playground was created as a programmable tool. Below you\'ll find a few examples of what you can do with it. Each discussed API is described in detail in the APIs section:","sidebar":"tutorialSidebar"},"contributing/code":{"id":"contributing/code","title":"Code Contributions","description":"A guide on how to get started contributing code to the WordPress Playground project.","sidebar":"tutorialSidebar"},"contributing/coding-standards":{"id":"contributing/coding-standards","title":"Coding standards","description":"Formatting","sidebar":"tutorialSidebar"},"contributing/documentation":{"id":"contributing/documentation","title":"Contributing Documentation","description":"WordPress Playground is documented by volunteers and we welcome your contributions.","sidebar":"tutorialSidebar"},"contributing/index":{"id":"contributing/index","title":"Start Contributing","description":"Welcome to the WordPress Playground project! All are welcome here.","sidebar":"tutorialSidebar"},"contributing/packages-and-projects":{"id":"contributing/packages-and-projects","title":"NX \u2013 Packages and Projects","description":"WordPress Playground uses a tool called nx to manage the repository.","sidebar":"tutorialSidebar"},"contributing/publishing":{"id":"contributing/publishing","title":"Publishing Packages, Releases, and More","description":"WordPress Playground has many types of artifacts that are published:","sidebar":"tutorialSidebar"},"javascript-api/blueprint-functions-in-api-client":{"id":"javascript-api/blueprint-functions-in-api-client","title":"Blueprints Functions and the API Client","description":"Every Blueprint step you can declare in the JSON object also provides a handler function that can be used directly.","sidebar":"tutorialSidebar"},"javascript-api/blueprint-json-in-api-client":{"id":"javascript-api/blueprint-json-in-api-client","title":"Blueprints JSON and the API Client","description":"The Playground API client can be initialized with a JSON Blueprint. This is a convenient way of preconfiguring it in any way you like without worrying about progress bars and fetching remote files:","sidebar":"tutorialSidebar"},"javascript-api/index":{"id":"javascript-api/index","title":"JavaScript API","description":"WordPress Playground comes with a JavaScript API client that grants you full control over your WordPress.","sidebar":"tutorialSidebar"},"javascript-api/index-html-vs-remote-html":{"id":"javascript-api/index-html-vs-remote-html","title":"remote.html vs index.html","description":"playground.wordpress.net exposes two distinct APIs through two separate HTML files","sidebar":"tutorialSidebar"},"javascript-api/playground-api-client":{"id":"javascript-api/playground-api-client","title":"Playground API Client","description":"The PlaygroundClient object implements the UniversalPHP interface. All the methods from that interface are also available in Node.js and same-process PHP instances (Playground runs PHP in a web worker).","sidebar":"tutorialSidebar"},"limitations/index":{"id":"limitations/index","title":"Limitations","description":"WordPress Playground has a few limitations that you should be aware of.","sidebar":"tutorialSidebar"},"nodejs/index":{"id":"nodejs/index","title":"Usage in Node.js","description":"As a WebAssembly project, WordPress Playground can also be used in Node.js. Here\'s how you can do it:","sidebar":"tutorialSidebar"},"playground-apis/api-concepts":{"id":"playground-apis/api-concepts","title":"Concepts","description":"WordPress Playground in the browser is all about links and iframes. Regardless of which API you choose, you will use it in one of the following ways:","sidebar":"tutorialSidebar"},"playground-apis/index":{"id":"playground-apis/index","title":"APIs overview","description":"WordPress Playground exposes a few APIs that you can use to interact with the Playground:","sidebar":"tutorialSidebar"},"query-api/index":{"id":"query-api/index","title":"Query API","description":"WordPress Playground exposes a simple API that you can use to configure the Playground in the browser.","sidebar":"tutorialSidebar"},"start-here/index":{"id":"start-here/index","title":"Start here","description":"\ud83d\udc4b Hi! Welcome to WordPress Playground documentation.","sidebar":"tutorialSidebar"},"start-using/index":{"id":"start-using/index","title":"Start using WordPress Playground in 5 minutes","description":"WordPress Playground can help you with any of the following:","sidebar":"tutorialSidebar"}}}')}}]);