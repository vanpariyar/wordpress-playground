"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[7249],{6990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(11),a=(n(2735),n(9530));const i={slug:"/developers/apis/javascript-api/-html-vs-remote-html"},o="remote.html vs index.html",l={unversionedId:"developers/apis/javascript-api/index-html-vs-remote-html",id:"developers/apis/javascript-api/index-html-vs-remote-html",title:"remote.html vs index.html",description:"playground.wordpress.net exposes two distinct APIs through two separate HTML files",source:"@site/docs/developers/06-apis/javascript-api/02-index-html-vs-remote-html.md",sourceDirName:"developers/06-apis/javascript-api",slug:"/developers/apis/javascript-api/-html-vs-remote-html",permalink:"/wordpress-playground/developers/apis/javascript-api/-html-vs-remote-html",draft:!1,editUrl:"https://github.com/WordPress/wordpress-playground/tree/trunk/packages/docs/site/docs/developers/06-apis/javascript-api/02-index-html-vs-remote-html.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{slug:"/developers/apis/javascript-api/-html-vs-remote-html"},sidebar:"developersSidebar",previous:{title:"Playground API Client",permalink:"/wordpress-playground/developers/apis/javascript-api/playground-api-client"},next:{title:"Blueprints JSON and the API Client",permalink:"/wordpress-playground/developers/apis/javascript-api/blueprint-json-in-api-client"}},s={},p=[{value:"Remote.html",id:"remotehtml",level:2},{value:"Index.html",id:"indexhtml",level:2}],d={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"remotehtml-vs-indexhtml"},(0,a.kt)("inlineCode",{parentName:"h1"},"remote.html")," vs ",(0,a.kt)("inlineCode",{parentName:"h1"},"index.html")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://playground.wordpress.net/"},"playground.wordpress.net")," exposes two distinct APIs through two separate HTML files: ",(0,a.kt)("inlineCode",{parentName:"p"},"remote.html")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"index.html"),". Here's an overview of their functions and differences:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"index.html"),' uses WordPress Playground API client to control the "endpoint" that is ',(0,a.kt)("inlineCode",{parentName:"li"},"remote.html"),"."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("a",{parentName:"li",href:"../query-api/"},"Query API")," is exclusively provided by ",(0,a.kt)("inlineCode",{parentName:"li"},"index.html"),", independent of the WordPress Playground JavaScript API."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("a",{parentName:"li",href:"../javascript-api/"},"JavaScript API")," is exclusively provided by ",(0,a.kt)("inlineCode",{parentName:"li"},"remote.html"),'. Only that file can be used as an "endpoint" for the ',(0,a.kt)("inlineCode",{parentName:"li"},"PlaygroundClient")," class.")),(0,a.kt)("p",null,"Here's a bit more about each of these files:"),(0,a.kt)("h2",{id:"remotehtml"},"Remote.html"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"remote.html")," runs and renders WordPress and also exposes an API for developers to control it. Importantly, ",(0,a.kt)("inlineCode",{parentName:"p"},"remote.html")," does not render any UI elements, such as browser UI or version switchers. It's just WordPress. The primary functions of ",(0,a.kt)("inlineCode",{parentName:"p"},"remote.html")," are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Loading the suitable version of php.wasm, the WebAssembly build of PHP."),(0,a.kt)("li",{parentName:"ul"},"Loading the correct version of WordPress for user interaction."),(0,a.kt)("li",{parentName:"ul"},"Initiating PHP in a WebWorker and registering a ServiceWorker for HTTP requests."),(0,a.kt)("li",{parentName:"ul"},"Listening to the ",(0,a.kt)("inlineCode",{parentName:"li"},"message")," event from the parent window and executing the appropriate code command.")),(0,a.kt)("p",null,"That last part is how the public API works. The parent window (",(0,a.kt)("inlineCode",{parentName:"p"},"index.html"),") sends a message to the iframe (",(0,a.kt)("inlineCode",{parentName:"p"},"remote.html"),") with a command and arguments, and the iframe then executes that command and sends the result back with another message."),(0,a.kt)("p",null,"Sending messages is cumbersome so the PlaygroundClient class provides an object-oriented API that handles the messages internally."),(0,a.kt)("p",null,"For quick testing and debugging, ",(0,a.kt)("inlineCode",{parentName:"p"},"remote.html")," also exposes the JavaScript API client as ",(0,a.kt)("inlineCode",{parentName:"p"},"window.playground"),". You can use it from your devtools as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"> await playground.listFiles(\"/\")\n(6)\xa0['tmp', 'home', 'dev', 'proc', 'internal', 'wordpress']\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"playground")," is a class instance in this context and you will benefit from browser's autocompletion."),(0,a.kt)("h2",{id:"indexhtml"},"Index.html"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"index.html")," is an independent app built around ",(0,a.kt)("inlineCode",{parentName:"p"},"remote.html")," using the WordPress Playground API client."),(0,a.kt)("p",null,"It renders the browser UI, version selectors, and renders WordPress by embedding ",(0,a.kt)("inlineCode",{parentName:"p"},"remote.html")," via an iframe. UI features like an address bar or a version selector are implemented by communicating with ",(0,a.kt)("inlineCode",{parentName:"p"},"remote.html")," using ",(0,a.kt)("inlineCode",{parentName:"p"},"PlaygroundClient"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"index.html")," monitors the query parameters it receives and triggers the appropriate ",(0,a.kt)("inlineCode",{parentName:"p"},"PlaygroundClient")," methods. For instance, ",(0,a.kt)("inlineCode",{parentName:"p"},"?plugin=coblocks")," triggers ",(0,a.kt)("inlineCode",{parentName:"p"},"installPluginsFromDirectory( client, ['coblocks'] )"),". This mechanism forms the basis of the Query API."),(0,a.kt)("p",null,"For quick testing and debugging, ",(0,a.kt)("inlineCode",{parentName:"p"},"index.html")," also exposes the JavaScript API client as ",(0,a.kt)("inlineCode",{parentName:"p"},"window.playground"),". You can use it from your devtools as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"> await playground.listFiles(\"/\")\n(6)\xa0['tmp', 'home', 'dev', 'proc', 'internal', 'wordpress']\n")),(0,a.kt)("p",null,"Note that ",(0,a.kt)("inlineCode",{parentName:"p"},"playground")," is a Proxy object in this context and you won't get any autocompletion from the browser."))}c.isMDXComponent=!0},9530:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(2735);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,h=m["".concat(s,".").concat(u)]||m[u]||c[u]||i;return n?r.createElement(h,o(o({ref:t},d),{},{components:n})):r.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);