"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mainSidebar":[{"type":"category","label":"Documentation","items":[{"type":"link","label":"Quick Start Guide","href":"/wordpress-playground/quick-start-guide","docId":"main/quick-start-guide"},{"type":"link","label":"Playground web instance","href":"/wordpress-playground/web-instance","docId":"main/web-instance"},{"type":"category","label":"About Playground","items":[{"type":"link","label":"Build","href":"/wordpress-playground/about/build","docId":"main/about/build"},{"type":"link","label":"Test","href":"/wordpress-playground/about/test","docId":"main/about/test"},{"type":"link","label":"Launch","href":"/wordpress-playground/about/launch","docId":"main/about/launch"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/about"},{"type":"category","label":"Guides","items":[{"type":"link","label":"Playground in native iOS apps","href":"/wordpress-playground/guides/wordpress-native-ios-app","docId":"main/guides/wordpress-native-ios-app"},{"type":"link","label":"Playground for Plugin Developers","href":"/wordpress-playground/guides/for-plugin-developers","docId":"main/guides/for-plugin-developers"},{"type":"link","label":"Playground for Theme Developers","href":"/wordpress-playground/guides/for-theme-developers","docId":"main/guides/for-theme-developers"},{"type":"link","label":"Providing content for your demo with Playground","href":"/wordpress-playground/guides/providing-content-for-your-demo","docId":"main/guides/providing-content-for-your-demo"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/guides"},{"type":"category","label":"Contributing","items":[{"type":"link","label":"Code contributions","href":"/wordpress-playground/contributing/code","docId":"main/contributing/code"},{"type":"link","label":"Coding principles","href":"/wordpress-playground/contributing/coding-standards","docId":"main/contributing/coding-standards"},{"type":"link","label":"WordCamp Contributor Day","href":"/wordpress-playground/contributing/contributor-day","docId":"main/contributing/contributor-day"},{"type":"link","label":"Documentation contributions","href":"/wordpress-playground/contributing/documentation","docId":"main/contributing/documentation"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/contributing"},{"type":"link","label":"Links and Resources","href":"/wordpress-playground/resources","docId":"main/resources"},{"type":"link","label":"Changelog","href":"/wordpress-playground/changelog","docId":"main/changelog"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/"}],"blueprintsSidebar":[{"type":"category","label":"Blueprints","items":[{"type":"link","label":"Getting started","href":"/wordpress-playground/blueprints/getting-started","docId":"blueprints/index"},{"type":"category","label":"Tutorial","items":[{"type":"link","label":"What are Blueprints?","href":"/wordpress-playground/blueprints/tutorial/what-are-blueprints-what-you-can-do-with-them","docId":"blueprints/tutorial/what-are-blueprints-what-you-can-do-with-them"},{"type":"link","label":"How to run Blueprints","href":"/wordpress-playground/blueprints/tutorial/how-to-load-run-blueprints","docId":"blueprints/tutorial/how-to-load-run-blueprints"},{"type":"link","label":"Build your first Blueprint","href":"/wordpress-playground/blueprints/tutorial/build-your-first-blueprint","docId":"blueprints/tutorial/build-your-first-blueprint"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/blueprints/tutorial/"},{"type":"link","label":"Blueprint data Format","href":"/wordpress-playground/blueprints/data-format","docId":"blueprints/data-format"},{"type":"link","label":"Using Blueprints","href":"/wordpress-playground/blueprints/using-blueprints","docId":"blueprints/using-blueprints"},{"type":"category","label":"Steps","items":[{"type":"link","label":"Resources References","href":"/wordpress-playground/blueprints/steps/resources","docId":"blueprints/resources"},{"type":"link","label":"Shorthands","href":"/wordpress-playground/blueprints/steps/shorthands","docId":"blueprints/steps-shorthands"},{"type":"link","label":"API Consistency","href":"/wordpress-playground/blueprints/steps/api-consistency","docId":"blueprints/json-api-and-function-api"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/blueprints/steps"},{"type":"link","label":"Examples","href":"/wordpress-playground/blueprints/examples","docId":"blueprints/examples"},{"type":"link","label":"Troubleshoot and debug","href":"/wordpress-playground/blueprints/troubleshoot-and-debug-blueprints","docId":"blueprints/troubleshoot-and-debug-blueprints"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/blueprints"}],"developersSidebar":[{"type":"category","label":"Developers","items":[{"type":"link","label":"Quick Start Guide for Developers","href":"/wordpress-playground/developers/build-your-first-app","docId":"developers/build-an-app/index"},{"type":"category","label":"Local Development","items":[{"type":"link","label":"wp-now","href":"/wordpress-playground/developers/local-development/wp-now","docId":"developers/local-development/wp-now"},{"type":"link","label":"VS Code extension","href":"/wordpress-playground/developers/local-development/vscode-extension","docId":"developers/local-development/vscode-extension"},{"type":"link","label":"php-wasm/node","href":"/wordpress-playground/developers/local-development/php-wasm-node","docId":"developers/local-development/php-wasm-node"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/developers/local-development"},{"type":"category","label":"Playground APIs","items":[{"type":"link","label":"Query API","href":"/wordpress-playground/developers/apis/query-api","docId":"developers/apis/query-api/index"},{"type":"category","label":"Javascript API","items":[{"type":"link","label":"Playground API Client","href":"/wordpress-playground/developers/apis/javascript-api/playground-api-client","docId":"developers/apis/javascript-api/playground-api-client"},{"type":"link","label":"remote.html vs index.html","href":"/wordpress-playground/developers/apis/javascript-api/-html-vs-remote-html","docId":"developers/apis/javascript-api/index-html-vs-remote-html"},{"type":"link","label":"Blueprints JSON and the API Client","href":"/wordpress-playground/developers/apis/javascript-api/blueprint-json-in-api-client","docId":"developers/apis/javascript-api/blueprint-json-in-api-client"},{"type":"link","label":"Blueprints Functions and the API Client","href":"/wordpress-playground/developers/apis/javascript-api/blueprint-functions-in-api-client","docId":"developers/apis/javascript-api/blueprint-functions-in-api-client"},{"type":"link","label":"Mount data","href":"/wordpress-playground/developers/apis/javascript-api/mount-data","docId":"developers/apis/javascript-api/mount-data"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/developers/apis/javascript-api"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/developers/apis/"},{"type":"category","label":"Architecture","items":[{"type":"link","label":"WebAssembly PHP","href":"/wordpress-playground/developers/architecture/wasm-php-overview","docId":"developers/architecture/wasm-php-overview"},{"type":"link","label":"Compiling PHP","href":"/wordpress-playground/developers/architecture/wasm-php-compiling","docId":"developers/architecture/wasm-php-compiling"},{"type":"link","label":"PHP.js JavaScript module","href":"/wordpress-playground/developers/architecture/wasm-php-javascript-module","docId":"developers/architecture/wasm-php-javascript-module"},{"type":"link","label":"PHP Filesystem","href":"/wordpress-playground/developers/architecture/wasm-php-filesystem","docId":"developers/architecture/wasm-php-filesystem"},{"type":"link","label":"Data dependencies (browser version)","href":"/wordpress-playground/developers/architecture/wasm-php-data-dependencies","docId":"developers/architecture/wasm-php-data-dependencies"},{"type":"link","label":"Asyncify","href":"/wordpress-playground/developers/architecture/wasm-asyncify","docId":"developers/architecture/wasm-asyncify"},{"type":"link","label":"Running PHP apps in the browser with ServiceWorkers and Worker Threads","href":"/wordpress-playground/developers/architecture/browser-concepts","docId":"developers/architecture/browser-concepts"},{"type":"link","label":"Browser tab orchestrates the execution","href":"/wordpress-playground/developers/architecture/browser-tab-orchestrates-execution","docId":"developers/architecture/browser-tab-orchestrates-execution"},{"type":"link","label":"Iframe-based rendering","href":"/wordpress-playground/developers/architecture/browser-iframe-rendering","docId":"developers/architecture/browser-iframe-rendering"},{"type":"link","label":"PHP Worker Threads","href":"/wordpress-playground/developers/architecture/browser-php-worker-threads","docId":"developers/architecture/browser-php-worker-threads"},{"type":"link","label":"Service Workers","href":"/wordpress-playground/developers/architecture/browser-service-workers","docId":"developers/architecture/browser-service-workers"},{"type":"link","label":"Scopes","href":"/wordpress-playground/developers/architecture/browser-scopes","docId":"developers/architecture/browser-scopes"},{"type":"link","label":"Cross-process communication","href":"/wordpress-playground/developers/architecture/browser-cross-process-communication","docId":"developers/architecture/browser-cross-process-communication"},{"type":"link","label":"WordPress support","href":"/wordpress-playground/developers/architecture/wordpress","docId":"developers/architecture/wordpress"},{"type":"link","label":"How does it work?","href":"/wordpress-playground/developers/architecture/wordpress-database","docId":"developers/architecture/wordpress-database"},{"type":"link","label":"Bundling WordPress for the browser","href":"/wordpress-playground/developers/architecture/browser-wordpress","docId":"developers/architecture/browser-wordpress"},{"type":"link","label":"Host your own Playground","href":"/wordpress-playground/developers/architecture/host-your-own-playground","docId":"developers/architecture/host-your-own-playground"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/developers/architecture/index"},{"type":"link","label":"Limitations","href":"/wordpress-playground/developers/limitations","docId":"developers/limitations/index"}],"collapsed":true,"collapsible":true,"href":"/wordpress-playground/developers/"}]},"docs":{"blueprints/data-format":{"id":"blueprints/data-format","title":"Blueprint data Format","description":"A Blueprint JSON file can have many different properties that will be used to define your Playground instance. The most important properties are detailed below.","sidebar":"blueprintsSidebar"},"blueprints/examples":{"id":"blueprints/examples","title":"Examples","description":"Check the Blueprints Gallery to explore real-world code examples of using WordPress Playground to launch a WordPress site with a variety of setups.","sidebar":"blueprintsSidebar"},"blueprints/index":{"id":"blueprints/index","title":"Getting started","description":"Blueprints are JSON files for setting up your very own WordPress Playground instance. For example:","sidebar":"blueprintsSidebar"},"blueprints/introduction":{"id":"blueprints/introduction","title":"Introduction","description":"Check the Blueprints Gallery to explore real-world code examples of using WordPress Playground to launch a WordPress site with a variety of setups.","sidebar":"blueprintsSidebar"},"blueprints/json-api-and-function-api":{"id":"blueprints/json-api-and-function-api","title":"API Consistency","description":"Blueprints are defined in JSON format, but the underlying implementation uses JavaScript functions to execute the steps. While JSON is the most convenient way of interacting with Blueprints, you can also use the underlying functions directly.","sidebar":"blueprintsSidebar"},"blueprints/resources":{"id":"blueprints/resources","title":"Resources References","description":"\\"Resource References\\" allow you use external files in Blueprints","sidebar":"blueprintsSidebar"},"blueprints/steps":{"id":"blueprints/steps","title":"Steps","description":"The steps property of a Blueprint is an array of steps to run. For example this Blueprint logs the user in as an admin:","sidebar":"blueprintsSidebar"},"blueprints/steps-shorthands":{"id":"blueprints/steps-shorthands","title":"Shorthands","description":"You can specify some steps using a shorthand syntax. The following steps are currently supported:","sidebar":"blueprintsSidebar"},"blueprints/troubleshoot-and-debug-blueprints":{"id":"blueprints/troubleshoot-and-debug-blueprints","title":"Troubleshoot and debug","description":"When you build Blueprints, you might run into issues. Here are tips and tools to help you debug them:","sidebar":"blueprintsSidebar"},"blueprints/tutorial/build-your-first-blueprint":{"id":"blueprints/tutorial/build-your-first-blueprint","title":"Build your first Blueprint","description":"Six steps to your first blueprint","sidebar":"blueprintsSidebar"},"blueprints/tutorial/how-to-load-run-blueprints":{"id":"blueprints/tutorial/how-to-load-run-blueprints","title":"How to run Blueprints","description":"Learn about the multiple ways to use blueprints","sidebar":"blueprintsSidebar"},"blueprints/tutorial/index":{"id":"blueprints/tutorial/index","title":"Blueprints 101","description":"Entrance to a short course on Blueprints","sidebar":"blueprintsSidebar"},"blueprints/tutorial/what-are-blueprints-what-you-can-do-with-them":{"id":"blueprints/tutorial/what-are-blueprints-what-you-can-do-with-them","title":"What are Blueprints?","description":"Getting started with Blueprints","sidebar":"blueprintsSidebar"},"blueprints/using-blueprints":{"id":"blueprints/using-blueprints","title":"Using Blueprints","description":"You can use Blueprints in one of two ways:","sidebar":"blueprintsSidebar"},"developers/apis/index":{"id":"developers/apis/index","title":"APIs overview","description":"WordPress Playground APIs overview","sidebar":"developersSidebar"},"developers/apis/javascript-api/blueprint-functions-in-api-client":{"id":"developers/apis/javascript-api/blueprint-functions-in-api-client","title":"Blueprints Functions and the API Client","description":"Every Blueprint step you can declare in the JSON object also provides a handler function that can be used directly.","sidebar":"developersSidebar"},"developers/apis/javascript-api/blueprint-json-in-api-client":{"id":"developers/apis/javascript-api/blueprint-json-in-api-client","title":"Blueprints JSON and the API Client","description":"The Playground API client can be initialized with a JSON Blueprint. This is a convenient way of preconfiguring it in any way you like without worrying about progress bars and fetching remote files:","sidebar":"developersSidebar"},"developers/apis/javascript-api/index":{"id":"developers/apis/javascript-api/index","title":"JavaScript API","description":"WordPress Playground comes with a JavaScript API client that grants you full control over your WordPress.","sidebar":"developersSidebar"},"developers/apis/javascript-api/index-html-vs-remote-html":{"id":"developers/apis/javascript-api/index-html-vs-remote-html","title":"remote.html vs index.html","description":"playground.wordpress.net exposes two distinct APIs through two separate HTML files","sidebar":"developersSidebar"},"developers/apis/javascript-api/mount-data":{"id":"developers/apis/javascript-api/mount-data","title":"Mount data","description":"Mount a directory from the browser","sidebar":"developersSidebar"},"developers/apis/javascript-api/playground-api-client":{"id":"developers/apis/javascript-api/playground-api-client","title":"Playground API Client","description":"The PlaygroundClient object implements the UniversalPHP interface. All the methods from that interface are also available in Node.js and same-process PHP instances (Playground runs PHP in a web worker).","sidebar":"developersSidebar"},"developers/apis/query-api/index":{"id":"developers/apis/query-api/index","title":"Query API","description":"WordPress Playground exposes a simple API that you can use to configure the Playground in the browser.","sidebar":"developersSidebar"},"developers/architecture/browser-concepts":{"id":"developers/architecture/browser-concepts","title":"Running PHP apps in the browser with ServiceWorkers and Worker Threads","description":"On a high level, WordPress Playground works in web browsers as follows:","sidebar":"developersSidebar"},"developers/architecture/browser-cross-process-communication":{"id":"developers/architecture/browser-cross-process-communication","title":"Cross-process communication","description":"@php-wasm/web uses the Comlink library to turns the one-way postMessage available in JavaScript into a two-way communication channel.","sidebar":"developersSidebar"},"developers/architecture/browser-iframe-rendering":{"id":"developers/architecture/browser-iframe-rendering","title":"Iframe-based rendering","description":"To avoid page reloads, all the PHPRequestHandler responses must be rendered in an iframe. Remember, the entire setup only lives as long as the main index.html. We want to avoid reloading the main app at all costs.","sidebar":"developersSidebar"},"developers/architecture/browser-php-worker-threads":{"id":"developers/architecture/browser-php-worker-threads","title":"PHP Worker Threads","description":"PHP is always ran in a web worker to ensure the PHP runtime doesn\'t slow down the user interface of the main website.","sidebar":"developersSidebar"},"developers/architecture/browser-scopes":{"id":"developers/architecture/browser-scopes","title":"Scopes","description":"Scopes keep your app working when you open it in two different browser tabs.","sidebar":"developersSidebar"},"developers/architecture/browser-service-workers":{"id":"developers/architecture/browser-service-workers","title":"Service Workers","description":"A Service Worker is used to handle the HTTP traffic using the in-browser PHPRequestHandler.","sidebar":"developersSidebar"},"developers/architecture/browser-tab-orchestrates-execution":{"id":"developers/architecture/browser-tab-orchestrates-execution","title":"Browser tab orchestrates the execution","description":"The main index.html ties the entire application together. It starts all the concurrent processes and displays the PHP responses. The app only lives as long as the main index.html.","sidebar":"developersSidebar"},"developers/architecture/browser-wordpress":{"id":"developers/architecture/browser-wordpress","title":"Bundling WordPress for the browser","description":"The web bundler Dockerfile turns a vanilla WordPress into a browser-optimized one:","sidebar":"developersSidebar"},"developers/architecture/host-your-own-playground":{"id":"developers/architecture/host-your-own-playground","title":"Host your own Playground","description":"You can host the Playground on your own domain instead of playground.wordpress.net.","sidebar":"developersSidebar"},"developers/architecture/index":{"id":"developers/architecture/index","title":"Architecture overview","description":"WordPress Playground consists of the following high-level components:","sidebar":"developersSidebar"},"developers/architecture/wasm-asyncify":{"id":"developers/architecture/wasm-asyncify","title":"Asyncify","description":"Asyncify lets synchronous C or C++ code interact with asynchronous JavaScript. Technically, it saves the entire C call stack before yielding control back to JavaScript, and then restores it when the asynchronous call is finished. This is called stack switching.","sidebar":"developersSidebar"},"developers/architecture/wasm-php-compiling":{"id":"developers/architecture/wasm-php-compiling","title":"Compiling PHP","description":"The build pipeline lives in a Dockerfile. It was originally forked from seanmorris/php-wasm","sidebar":"developersSidebar"},"developers/architecture/wasm-php-data-dependencies":{"id":"developers/architecture/wasm-php-data-dependencies","title":"Data dependencies (browser version)","description":"Importing file to PHP by manually calling writeFile() would be quite inconvenient. Fortunately, Emscripten provides a \\"data dependencies\\" feature.","sidebar":"developersSidebar"},"developers/architecture/wasm-php-filesystem":{"id":"developers/architecture/wasm-php-filesystem","title":"PHP Filesystem","description":"The PHP module has its own filesystem separate from your computer\'s filesystem. It is provided by Emscripten\'s FS library and the default APIs is low-level and cumbersome to use. The PHP JavaScript class shipped with WordPress Playground wraps it with a more convenient higher-level API.","sidebar":"developersSidebar"},"developers/architecture/wasm-php-javascript-module":{"id":"developers/architecture/wasm-php-javascript-module","title":"PHP.js JavaScript module","description":"PHP.js JavaScript module","sidebar":"developersSidebar"},"developers/architecture/wasm-php-overview":{"id":"developers/architecture/wasm-php-overview","title":"WebAssembly PHP","description":"WordPress Playground build the PHP interpreter to WebAssembly using Emscripten and a dedicated pipeline.","sidebar":"developersSidebar"},"developers/architecture/wordpress":{"id":"developers/architecture/wordpress","title":"WordPress support","description":"WordPress, as a PHP application, can run on PHP WebAssembly. However, there are a few caveats.","sidebar":"developersSidebar"},"developers/architecture/wordpress-database":{"id":"developers/architecture/wordpress-database","title":"How does it work?","description":"Database is supported via MySQLSQLite translation layer","sidebar":"developersSidebar"},"developers/build-an-app/index":{"id":"developers/build-an-app/index","title":"Quick Start Guide for Developers","description":"WordPress Playground was created as a programmable tool. Below you\'ll find a few examples of what you can do with it. Each discussed API is described in detail in the APIs section:","sidebar":"developersSidebar"},"developers/intro":{"id":"developers/intro","title":"WordPress Playground Developers Docs","description":"Hi! Welcome to WordPress Playground Developer documentation.","sidebar":"developersSidebar"},"developers/limitations/index":{"id":"developers/limitations/index","title":"Limitations","description":"WordPress Playground is under active development and has some limitations you should keep in mind when running it and developing with it.","sidebar":"developersSidebar"},"developers/local-development/intro":{"id":"developers/local-development/intro","title":"Local Development","description":"Local Development with WordPress Playground","sidebar":"developersSidebar"},"developers/local-development/php-wasm-node":{"id":"developers/local-development/php-wasm-node","title":"php-wasm/node","description":"As a WebAssembly project, you can also use WordPress Playground in Node.js.","sidebar":"developersSidebar"},"developers/local-development/vscode-extension":{"id":"developers/local-development/vscode-extension","title":"VS Code extension","description":"Start a zero-setup development environment using the VS Code extension, and develop your plugin or theme locally without installing Apache or MySQL.","sidebar":"developersSidebar"},"developers/local-development/wp-now":{"id":"developers/local-development/wp-now","title":"wp-now","description":"wp-now is a command-line tool designed to simplify the process of running WordPress locally. It provides a quick and easy way to set up a local WordPress environment with minimal configuration.","sidebar":"developersSidebar"},"main/about/build":{"id":"main/about/build","title":"Build","description":"Build with WP Playground","sidebar":"mainSidebar"},"main/about/index":{"id":"main/about/index","title":"About Playground","description":"What is WordPress Playground?","sidebar":"mainSidebar"},"main/about/launch":{"id":"main/about/launch","title":"Launch","description":"Reach your clients or customers faster. Showcase your product, let users try it live, or launch it in the App Store with zero lead time.","sidebar":"mainSidebar"},"main/about/test":{"id":"main/about/test","title":"Test","description":"Upgrade your QA process with the ability to review progress in your browser in a single click. When you\u2019re ready, push updates instantly.","sidebar":"mainSidebar"},"main/changelog":{"id":"main/changelog","title":"Changelog","description":"All notable changes to this project are documented in this file by a CI job","sidebar":"mainSidebar"},"main/contributing/code":{"id":"main/contributing/code","title":"Code contributions","description":"Like all WordPress projects, Playground uses GitHub to manage code and track issues. The main repository is at https//github.com/WordPress/playground-tools/.","sidebar":"mainSidebar"},"main/contributing/coding-standards":{"id":"main/contributing/coding-standards","title":"Coding principles","description":"Error messages","sidebar":"mainSidebar"},"main/contributing/contributor-day":{"id":"main/contributing/contributor-day","title":"WordCamp Contributor Day","description":"The\xa0WordPress Playground VS Code extension\xa0and\xa0wp-now\xa0streamline\xa0the process of\xa0setting up a local WordPress environment.\xa0WordPress Playground powers\xa0both\u2014no Docker, MySQL, or Apache required.","sidebar":"mainSidebar"},"main/contributing/documentation":{"id":"main/contributing/documentation","title":"Documentation contributions","description":"WordPress Playground\'s documentation site is maintained by volunteers like you, who\'d love your help.","sidebar":"mainSidebar"},"main/contributing/introduction":{"id":"main/contributing/introduction","title":"Introduction","description":"WordPress Playground is an open-source project that welcomes all contributors\u2014from code to design, documentation to triage.","sidebar":"mainSidebar"},"main/guides/for-plugin-developers":{"id":"main/guides/for-plugin-developers","title":"Playground for Plugin Developers","description":"WordPress Playground for Plugin Developers","sidebar":"mainSidebar"},"main/guides/for-theme-developers":{"id":"main/guides/for-theme-developers","title":"Playground for Theme Developers","description":"WordPress Playground for Theme Developers","sidebar":"mainSidebar"},"main/guides/index":{"id":"main/guides/index","title":"\ud83d\udcd6 Guides","description":"WordPress Playground Guides","sidebar":"mainSidebar"},"main/guides/providing-content-for-your-demo":{"id":"main/guides/providing-content-for-your-demo","title":"Providing content for your demo with Playground","description":"Providing content for your demo with WordPress Playground","sidebar":"mainSidebar"},"main/guides/wordpress-native-ios-app":{"id":"main/guides/wordpress-native-ios-app","title":"Playground in native iOS apps","description":"WordPress Playground in native iOS apps","sidebar":"mainSidebar"},"main/introduction":{"id":"main/introduction","title":"Introduction","description":"WordPress Playground website moved to wordpress.org/playground/. The site you\'re at now hosts the documentation.","sidebar":"mainSidebar"},"main/quick-start-guide":{"id":"main/quick-start-guide","title":"Quick Start Guide","description":"WordPress Playground can help you with any of the following:","sidebar":"mainSidebar"},"main/resources":{"id":"main/resources","title":"Links and Resources","description":"There\'s a set of redirections in place to make it easier the access to some of the tools related to Playground:","sidebar":"mainSidebar"},"main/web-instance":{"id":"main/web-instance","title":"Playground web instance","description":"https://playground.wordpress.net/ is a versatile web tool that allows developers to run WordPress in a browser without needing a server. This environment is particularly useful for testing plugins, themes, and other WordPress features quickly and efficiently.","sidebar":"mainSidebar"}}}')}}]);